#pragma once
// Include standard headers
#pragma comment(lib, "Ws2_32.lib")
#include <stdio.h>
#include <string>
#include <stdlib.h>
#include <fstream>
#include <sstream>
#include <vector>
#include <thread>
#include <iostream>
#include <winsock2.h>
#include <ws2tcpip.h>
#include <cmath>

static float initialFoV;

#define GLEW_STATIC
// Include GLEW
#include <GL/glew.h>

// Include GLFW
#include <GLFW/glfw3.h>



// Include GLM
#define GLM_FORCE_RADIANS
#include <glm/glm.hpp>
#include <glm/gtx/transform.hpp>

#define STB_IMAGE_IMPLEMENTATION
#include "stb_image.h"

#define MAX_OBJECT 32

#define FILE_VN 0
#define FILE_VTN 1
#define FILE_VT 2
#define FILE_FLAT 3

#define CONSOLE_PORT 8090


struct _Vertex{
	glm::vec3 pos;
	glm::vec3 color;
	glm::vec3 normal;
	glm::vec2 texCoord;
	GLfloat modelIndex;
	
} ;
typedef struct _Vertex Vertex;

#define WIDTH 1680
#define HEIGHT 960


typedef struct Character {
	int codePoint, x, y, width, height, originX, originY;
} Character;

typedef struct {
	float topLeftX, topLeftY, topRightX, topRightY, bottomLeftX, bottomLeftY, bottomRightX, bottomRightY;
}charUV;

typedef struct Font {
	const char* name;
	int size, bold, italic, width, height, characterCount;
	Character* characters;
} Font;

static Character characters_Arial[] = {
  {' ', 2663, 429, 3, 3, 1, 1},
  {'!', 3495, 242, 31, 185, -20, 184},
  {'"', 2105, 429, 70, 68, -10, 184},
  {'#', 2018, 0, 139, 192, -1, 187},
  {'$', 696, 0, 123, 229, -8, 201},
  {'%', 1000, 0, 200, 195, -13, 187},
  {'&', 1200, 0, 157, 193, -9, 187},
  {'\'', 2175, 429, 28, 68, -10, 184},
  {'(', 389, 0, 63, 242, -14, 187},
  {')', 452, 0, 63, 242, -14, 187},
  {'*', 2020, 429, 85, 80, -7, 187},
  {'+', 1665, 429, 123, 124, -13, 152},
  {',', 2203, 429, 30, 64, -20, 27},
  {'-', 2441, 429, 71, 26, -7, 79},
  {'.', 2413, 429, 28, 28, -22, 27},
  {'/', 2276, 0, 73, 192, 1, 187},
  {'0', 2915, 0, 122, 190, -9, 185},
  {'1', 248, 242, 71, 186, -26, 185},
  {'2', 124, 242, 124, 186, -6, 185},
  {'3', 2546, 0, 123, 190, -9, 185},
  {'4', 2898, 242, 129, 185, -2, 184},
  {'5', 0, 242, 124, 187, -9, 182},
  {'6', 2422, 0, 124, 190, -8, 185},
  {'7', 3604, 242, 121, 184, -11, 182},
  {'8', 2669, 0, 123, 190, -9, 185},
  {'9', 2792, 0, 123, 190, -9, 185},
  {':', 1389, 429, 28, 136, -22, 134},
  {';', 3792, 242, 30, 171, -20, 134},
  {'<', 1417, 429, 124, 126, -12, 153},
  {'=', 1897, 429, 123, 80, -13, 130},
  {'>', 1541, 429, 124, 126, -12, 153},
  {'?', 3645, 0, 121, 188, -10, 187},
  {'@', 0, 0, 239, 242, -12, 187},
  {'A', 734, 242, 174, 185, 2, 184},
  {'B', 2618, 242, 141, 185, -17, 184},
  {'C', 1706, 0, 164, 192, -11, 187},
  {'D', 1580, 242, 154, 185, -18, 184},
  {'E', 2759, 242, 139, 185, -19, 184},
  {'F', 3027, 242, 127, 185, -19, 184},
  {'G', 1534, 0, 172, 192, -12, 187},
  {'H', 2330, 242, 146, 185, -19, 184},
  {'I', 3526, 242, 27, 185, -22, 184},
  {'J', 3542, 0, 103, 189, -6, 184},
  {'K', 1734, 242, 154, 185, -17, 184},
  {'L', 3154, 242, 117, 185, -17, 184},
  {'M', 556, 242, 178, 185, -17, 184},
  {'N', 2036, 242, 147, 185, -18, 184},
  {'O', 1357, 0, 177, 192, -11, 187},
  {'P', 2476, 242, 142, 185, -18, 184},
  {'Q', 819, 0, 181, 203, -9, 187},
  {'R', 1417, 242, 163, 185, -19, 184},
  {'S', 1870, 0, 148, 192, -10, 187},
  {'T', 1888, 242, 148, 185, -4, 184},
  {'U', 3037, 0, 146, 189, -19, 184},
  {'V', 1248, 242, 169, 185, 0, 184},
  {'W', 319, 242, 237, 185, -2, 184},
  {'X', 908, 242, 170, 185, 0, 184},
  {'Y', 1078, 242, 170, 185, 1, 184},
  {'Z', 2183, 242, 147, 185, -4, 184},
  {'[', 644, 0, 52, 236, -16, 184},
  {'\\', 2349, 0, 73, 192, 1, 187},
  {']', 591, 0, 53, 236, -3, 184},
  {'^', 1788, 429, 109, 103, -5, 187},
  {'_', 2512, 429, 151, 19, 5, -33},
  {'`', 2364, 429, 49, 38, -10, 185},
  {'a', 0, 429, 124, 142, -8, 137},
  {'b', 3766, 0, 118, 188, -15, 184},
  {'c', 237, 429, 119, 141, -8, 137},
  {'d', 3884, 0, 118, 188, -7, 184},
  {'e', 3949, 242, 125, 142, -8, 137},
  {'f', 4002, 0, 80, 188, -1, 187},
  {'g', 2157, 0, 119, 192, -7, 137},
  {'h', 3384, 242, 111, 185, -15, 184},
  {'i', 3553, 242, 26, 185, -15, 184},
  {'j', 537, 0, 54, 239, 13, 184},
  {'k', 3271, 242, 113, 185, -15, 184},
  {'l', 3579, 242, 25, 185, -15, 184},
  {'m', 356, 429, 182, 139, -15, 137},
  {'n', 538, 429, 111, 139, -15, 137},
  {'o', 3822, 242, 127, 142, -7, 137},
  {'p', 3306, 0, 118, 189, -15, 137},
  {'q', 3424, 0, 118, 189, -7, 137},
  {'r', 759, 429, 75, 139, -15, 137},
  {'s', 124, 429, 113, 142, -6, 137},
  {'t', 3725, 242, 67, 183, -3, 180},
  {'u', 649, 429, 110, 139, -15, 134},
  {'v', 1144, 429, 124, 136, -2, 134},
  {'w', 834, 429, 184, 136, 1, 134},
  {'x', 1018, 429, 126, 136, -1, 134},
  {'y', 3183, 0, 123, 189, -3, 134},
  {'z', 1268, 429, 121, 136, -3, 134},
  {'{', 239, 0, 75, 242, -6, 187},
  {'|', 515, 0, 22, 242, -22, 187},
  {'}', 314, 0, 75, 242, -4, 187},
  {'~', 2233, 429, 131, 43, -9, 111},
};

static Font font_Arial = { "Arial", 256, 0, 0, 4096, 1024, 95, characters_Arial };

typedef struct{
	std::string text;
	int x, y;
	unsigned int indexOffset;
	unsigned int vertexOffset;
	unsigned int vertexCount;
	unsigned int indexCount;
	unsigned int index;
}Text;



typedef struct {

	unsigned int vertex;
	unsigned int texture;
	unsigned int normal;
} Index;

